// Code generated by go-bindata. (@generated) DO NOT EDIT.

// Package assets generated by go-bindata.// sources:
// resources/redis-commands-golang.json
package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _resourcesRedisCommandsGolangJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3d\x4d\x77\xa3\xb8\x96\xfb\xfe\x15\x1c\x9f\x59\xda\x67\xce\xbc\x65\xef\x64\x90\x6d\x5e\x00\xf1\x04\x24\x71\xbd\xd7\x0b\x62\x13\x87\x29\x1b\x3c\x80\xab\xba\xe6\x9d\x9e\xdf\x3e\x07\xec\x24\x76\x52\x20\xe9\x22\x01\xae\x64\xd3\x5d\x55\xc8\x70\xbf\x74\xbf\x75\xf5\xef\xdf\x34\x6d\x94\x45\xeb\x38\xd7\xd3\xdd\x2e\x4c\xd6\xf9\xe8\x77\xed\x9f\xbf\x69\x9a\xa6\xfd\xbb\xfa\xaf\xa6\x8d\x92\x70\x17\x8d\x7e\xd7\x46\x48\xb7\x34\x8b\x20\x63\x54\x3d\xf8\x6b\x5c\xbf\xca\x43\xb7\x98\xbd\xca\x32\x3d\x9f\xbd\x2a\xf0\x30\xf5\xd8\xcb\xe6\xd8\x2f\x57\x8e\xc6\xcf\x0f\xc3\x6c\x73\xd8\x45\x49\xf1\x8a\xd0\xf9\x6f\xcf\x7f\xff\xcf\xd1\x21\x8f\xb2\xea\x2f\x7f\x8c\xcf\x9f\x17\x3f\xf6\xc7\xe7\x79\x91\xc5\xc9\x66\xf4\xc7\xcb\xc3\xbf\x4e\x7f\xfa\x83\x4d\x8a\x6e\xe1\x1a\x33\xde\x98\x1d\xb6\xcc\xb7\x5d\x3c\xdd\x1d\xb6\x45\xbc\xdf\x96\x2b\x8a\xec\x10\x5d\x3c\x4b\xf7\x45\x9c\x26\xe1\xf6\xf4\x0c\x40\x1d\x03\x5b\xea\xa9\xd3\x84\x0f\x00\x66\x1d\xf9\x30\x78\x57\x61\x11\x6d\xd2\xec\x87\x30\xcc\xed\xe9\x3c\xc7\x8e\x8b\x3c\x0f\x06\xf7\x43\x5c\xe4\x75\xf0\xc6\x49\x11\x6d\xa2\x4c\x3a\xc0\x77\x0b\x82\x6c\x93\x43\x87\x90\x39\x90\x19\xe9\x21\x29\xb4\x34\xd3\x28\xf6\xb0\xdf\x31\x3b\x16\xd8\x72\x19\xb8\xb9\x2e\x76\x0c\x18\x6a\x5f\xa3\x1f\x75\xf8\x54\x8f\xf8\xb5\xc5\xb7\x70\x7b\x90\xae\x14\x03\x7f\xd1\xe1\x7e\xaf\x65\x16\x0b\xf7\x7d\x98\xe7\xdf\xd3\x6c\x2d\x19\xfd\xe9\x9c\xe2\x3b\x6a\xfa\x18\x91\x59\xb3\x08\x4c\xe7\x95\x19\x05\x91\x2a\x5f\x3d\x45\xeb\x06\x55\x1f\x25\x87\xdd\x9b\x67\xd5\x3f\x95\xcf\x3c\x7d\x81\x8d\xc0\xc2\x52\xa5\x7e\x6a\xfa\x3a\x09\x1c\xa0\xe6\x94\x27\xd1\x79\x11\x66\xc5\x68\x5c\xa2\x5b\xcb\xd9\x67\x9d\x36\xd6\x94\xa8\xb7\xa9\xe9\xcf\x4c\x6c\xf5\xb5\xb9\x57\x47\x3f\xaf\x84\x64\x8e\x5f\xf9\x71\xf9\x95\xea\x9d\x63\x6d\x94\x3e\x3e\xe6\x51\x51\xf7\xc1\xe7\x55\x82\x54\x62\x03\xe6\xf1\x02\x36\xd6\x9a\x75\xd4\x5b\x08\x55\x00\x6b\x3a\x3a\x9d\x2e\xb9\xe1\x8d\x93\x55\x16\x95\xdc\xee\x13\x66\x72\x8b\xe9\xcc\x22\x77\x23\x71\xf5\x70\x47\x91\x5b\xc2\xe4\x95\x6e\x90\x36\x9a\x21\xd3\x92\xbd\x3d\x88\x0b\xdb\x1b\xe9\x3e\xca\xc2\xf2\xdb\xf2\xfc\xe5\x75\x94\x17\xf2\xb4\x0f\xeb\x4d\x12\x3d\xd5\xa9\xe9\xbb\x04\xe8\xf0\xc9\x43\xf8\x21\xae\x15\xf3\x17\x99\x16\x55\xde\x72\x3c\x51\xd6\xb7\x38\xec\x83\x54\xa9\xb7\x5c\xa8\xd4\xcb\x11\x2a\x16\x3d\x8a\x78\x17\xa5\x07\x11\x6e\xf2\xe1\x4d\x3f\x30\xde\x96\x1b\x78\x40\x5f\x38\x4f\x0f\xd9\xaa\xd6\xec\x09\xee\xd2\x52\xc9\xc5\x49\xa3\xe6\x14\x7c\xa3\x2a\xaa\x7d\x71\x89\x6b\x9b\xce\x47\x14\x98\x0a\x75\x74\xff\x01\x51\xd7\x2d\x13\x3b\xbe\xa6\x23\x7d\x61\x3a\xc0\x70\x7f\x97\xae\x41\xc1\xd0\x12\x7b\xa5\x97\xe3\x10\x28\xd4\x26\x23\x5d\x7a\x5a\x76\x63\x5a\x16\x0c\xb3\x78\xff\xfb\x3e\xad\x37\x8b\x52\x82\xe2\x73\x6f\xd7\xa8\xf1\x74\x57\xdb\x38\x4a\x8a\x49\x2c\xcb\x6c\xb2\x41\xf1\x97\x2e\x06\x38\xb0\x49\x9a\xed\xc2\x6d\xc9\xd5\x5d\x98\x17\x47\x07\x3b\xdf\x86\xdf\x2a\xa7\x7b\x7f\x78\xc8\x0f\x0f\xf2\x60\xbc\xc8\x6e\x6a\xdd\xa7\x33\xce\x40\x41\x86\x51\x07\x4a\xc7\x32\xe4\xdd\x98\xae\x8d\x6b\x60\xf9\x11\xe5\xff\x99\xa4\x1d\x26\xe4\x4e\x3b\xb0\xaa\x46\x88\xec\x40\x35\x92\x98\x45\xfb\x6d\xbc\x0a\xc5\x65\x51\x04\xd7\x39\xf6\x1d\x64\x33\x4a\x34\xaf\x6b\x29\x36\x4c\xca\xb5\xd8\x45\x81\x07\x4c\x59\xa9\x35\x1e\x14\xbb\xd6\x12\x06\x58\xc9\x91\x1f\x13\xa8\x01\x21\x4e\xc9\x4a\x32\x9b\x55\x31\xf3\x8d\xe9\x42\x31\xf0\x4e\x3c\x03\xe1\xb0\x4a\x93\x24\x5a\x95\x92\x33\x51\x50\xe7\x3a\x41\xe8\x53\xa4\xdf\x80\x2d\x74\x5e\x84\xc5\xa1\xb6\xce\xc0\x47\x62\xa1\xec\x57\x25\xd5\x58\xaf\xcb\x34\x75\x6f\xcf\x5c\x8a\x67\xe6\x7d\x0d\x38\xfb\x2c\x7a\x8c\xff\x6c\xa3\x16\xe5\xf8\x78\x53\x1d\x79\xb5\xe5\x92\x26\x2e\xfd\xec\x87\xe0\xe8\x9c\xb8\xbe\xe9\x80\x64\xe5\x27\x3f\x6c\x03\x05\x09\x40\xc4\xf8\xe9\x2f\xc1\x70\x38\xc4\x22\xc4\x85\xc0\xf1\xd3\x5f\x4a\x31\x31\x81\x33\xb5\x88\x7e\x03\x54\x57\xdc\x7b\x8f\x9f\x48\x87\xe4\x61\x9b\xae\xbe\x4e\xaa\x77\x00\x48\xe5\x9b\x36\x2e\x79\x36\xd6\x46\x98\x52\x42\x25\x13\x2d\xf0\x7c\x4c\x35\x64\x18\x9e\x45\x7c\x60\xde\x2e\xdf\xa6\x82\xe9\xb1\x76\x39\xc6\x67\xa8\xa7\x81\xed\x62\x97\xe8\x0b\x96\x8f\x70\x5c\x5e\x15\x82\x26\x33\x64\x5a\x01\xc5\x13\x8a\x5d\x42\xa1\x18\x27\xe9\x3a\x6a\x10\x13\xb0\x3d\x3b\x03\xf4\x06\x2f\x3d\xd3\x29\xb9\xa2\x90\x29\x40\x00\x0d\x6c\x5d\xa1\xb8\x94\x9c\x27\xb7\xd0\xae\x8f\xe3\x46\x03\x39\x0a\x33\x42\x75\x5c\x6e\x60\x1f\xdd\xe0\x0a\x02\x15\x7b\x78\x66\x05\xde\xe2\xc8\x16\xbe\xf5\x84\x9e\x17\xe2\x06\x24\xff\x73\xdc\xb5\xf4\xb3\x94\x78\xd5\xb5\xa1\x6a\x37\x99\xce\x8c\xf0\xb1\xac\xa4\x0a\x98\x24\x0d\xb9\xb8\x96\xfc\xb2\x31\x54\x8e\xe2\xbd\xbc\x92\x59\x53\x26\xa1\x2d\x8b\xec\x25\x3b\x9f\x76\x5c\xe9\x10\x03\x73\x6e\xc0\x32\x36\x34\x75\xe4\x03\x63\x2b\xb5\x7b\xf0\xd8\x9e\x04\x0c\x5c\xf3\xa8\x00\xfb\x3b\x0b\x44\x8d\x2a\x66\x25\x33\x6e\x47\x55\x08\x33\x0f\xdd\x62\x9d\x38\x33\x73\xce\xc7\x26\x0f\xfb\x93\xe3\xfa\xc9\xd1\xd9\x80\x46\xc2\x8f\xf1\x66\x12\xed\xd3\xd5\x93\x2a\x29\xf5\xb0\x3f\x18\x8d\x99\x1f\x1e\x9e\x43\x4c\x80\x10\x98\x76\xe9\x9c\x55\x31\xbd\x36\xb2\xcd\x39\x45\xcf\x7f\xf1\x7c\x34\xb5\xf0\x31\x37\x6e\x60\x11\x88\x38\xf7\x8b\x0a\x89\xb3\xd0\x2d\x1e\xa4\xa7\x79\x52\x41\x83\x84\x8d\xc7\x95\x21\xb6\x8d\x1c\x96\x66\x3e\x2e\x3a\x7a\xd5\x7c\x4b\x4f\x0e\x08\xdf\xe2\xca\x7c\x03\x75\x42\xb5\x41\xb8\x52\x63\x32\xfd\xe1\x4a\x99\x69\x60\xe7\x6f\x1f\x66\xe1\x2e\x2a\xde\x79\xe9\xad\x19\x7f\x84\xeb\xd4\xa7\xc8\x22\x7e\xb5\x16\x6c\xa3\x00\x38\xb0\xf4\x8b\x8a\xa6\xd5\x17\x92\x94\xaa\xdd\x47\x0c\xf1\x35\xa6\x9e\xf9\x85\x41\x38\x03\x4f\x83\xb9\x46\xa6\x7f\x3f\xcf\x40\x2a\xea\xd2\xe1\x42\xf1\x08\x90\x87\xe7\x33\x14\x58\x2c\x04\xb1\x0e\x8c\xde\xa4\x03\x7d\xd1\x7b\xd7\x53\x97\xd3\x3a\x62\xb4\xf4\x41\x1d\x0a\x03\x03\x8b\xc2\x1d\x36\x9a\x19\xa6\xa7\x97\xae\x62\xf3\xa2\xc0\x56\xd4\xe5\x23\x08\x2d\xd6\x17\x40\x23\xb1\x8b\xf2\x3c\xdc\xc8\x56\x2c\xf8\x16\x01\x59\x9c\xaf\xb2\x78\xcf\x2c\xd9\xf2\x0b\x71\x72\xd8\x7d\x8d\x7e\xb0\x0f\x7a\xf0\xbf\xb1\x9b\xa6\x93\x30\x7b\x6b\x95\x55\xda\xec\x92\x5f\xde\x02\x01\x59\xf6\x14\xfe\xd7\x27\xc3\x3a\x66\xd8\x3d\xd6\x9b\x75\x13\xbe\x37\x3d\x68\x0a\xb5\x43\x3d\x8b\xef\x5d\x93\x02\x53\x14\x12\xcf\x4f\x44\xab\x34\x59\x8b\x08\x9d\x00\x72\xd0\x83\x75\xf2\xd0\x2b\xe2\x5d\x94\x17\xe1\xae\x36\x1d\xb6\x4f\xf3\xf8\x4f\xad\x5c\x26\x8c\x63\x95\x17\x46\xd0\x36\xaf\x30\xff\x91\xac\x20\x21\x3c\xf2\x96\x8e\x2e\x35\x9c\xae\x10\x31\xa6\x57\x8f\xc7\x1c\x13\x64\xf4\x7e\xc6\x6e\x9b\x26\x9b\xb8\x38\xac\xab\xf6\xb3\x6d\x58\xbc\xfc\x79\x17\xed\x1e\xea\xe3\xa2\x75\x7a\x78\xd8\x56\xeb\x5e\xff\xa4\x40\x7d\xce\x31\x59\x20\x68\x93\xb2\x3c\x22\x35\xd3\x42\x0d\xde\x03\x38\x3e\xd1\x07\xda\x86\x68\x1f\x9c\x32\xbc\x25\xfa\x4a\xc7\x17\xfe\x4d\xde\x0b\x0f\x49\xfd\xc9\x96\x26\x2d\xb6\x2b\xf7\xe9\xd7\xea\xbf\x8f\xd5\x71\xb0\x5d\x2c\x5b\xa7\x51\x64\x98\x41\xef\xa2\xfb\xaa\xd6\x9a\x15\x98\xc8\x2b\x9f\x95\xa3\xb4\x37\x66\xe1\x3a\xae\xef\x39\x13\x7f\x9f\x54\xa9\xe0\xff\xec\xf7\xb8\x78\x5a\xa5\x0d\x67\x95\x1b\xcf\xf3\x99\xfe\x42\x27\x84\x1a\xb2\xba\x91\x4a\x68\xd6\x71\x0e\x22\x44\x09\x4c\xa5\x80\x24\xc2\xf2\x14\xe6\xb5\x95\x1e\x16\x2c\x95\xed\x93\xd6\xe0\x77\x79\x02\xfa\x12\x52\xbe\xca\xb6\x1c\xaa\xa4\xd9\xba\xde\xaa\x34\xfb\x60\x7a\x29\x9d\x06\xf6\xb8\x3d\x31\x36\x55\x3c\x9f\xd0\xba\x66\x70\xa1\xf8\xaa\x2d\x0c\x17\x96\x4f\x05\x1c\x62\x1a\x7c\xba\xb4\xb1\x3d\x85\xb6\xc9\x74\xed\x84\x7c\x2a\x5d\x91\x6f\x7f\x2a\xdd\x4f\xa5\xfb\xa9\x74\x87\xa4\x74\x87\x51\x84\x9b\x63\x7f\x6a\xf6\x1e\x7e\x35\x4f\xfd\x80\xe6\xf8\xe6\xd8\xa7\xc8\x99\xf7\x9f\xc2\xe4\x9a\x22\xc0\xff\x3e\x9e\x49\x01\xe2\xa4\x02\x57\xd4\x87\x3d\xfd\x69\xa1\xac\xa4\xc9\x8f\xd7\x63\x1c\x6d\xc5\xda\x8f\xda\x25\x55\x16\xd8\xb2\x80\x45\xc7\x7d\x96\x16\xe9\xb7\x7a\xbb\xc1\x2f\xae\xe7\x07\x41\xcf\x27\x70\x5d\x7e\xef\xe5\x4c\xea\x58\xe3\x1d\x80\x55\x97\x77\x6c\x37\xfe\xe7\xe2\xa8\xdb\x25\x8c\xc7\xc3\x21\xc2\xbd\x3a\xed\x0c\xc4\x42\x65\x95\x48\xb2\xe8\x8a\xa2\xd6\x81\xf1\xeb\x0b\x2f\x70\xb9\x45\xb2\x5d\x5f\xbc\x19\x12\x75\x1d\x64\x66\xbd\x8e\x39\xca\x0a\x6a\xff\x4e\xe4\x9a\x59\xa4\xff\x92\x60\xd7\x34\x7b\x1f\x00\xf3\x91\xac\x6a\x94\x1c\x84\xac\x5b\x58\xd1\x80\x16\x51\x40\xec\x6b\xd1\x6c\x32\x9d\x0d\x7b\x00\x9e\xe3\x11\x69\xd6\x70\x3e\x86\x03\xd1\x92\x0e\x9f\x64\x78\x26\x83\xa3\x68\x68\x50\x6f\x3a\x54\x49\x60\xe2\xf9\xb4\x03\xc5\xd5\x8b\x23\x74\x8b\xac\x61\x98\x86\xd2\xac\x0f\x06\x90\xfe\xdd\x31\x65\xfe\xd3\x80\xdc\x27\x55\xfe\x0e\xfc\xb4\x47\x7e\x1c\x84\xd2\x61\xf0\x68\x11\xeb\x2e\x00\x0f\x17\xba\xc5\xd4\x33\x89\x53\x13\x0d\x7f\x8b\xb2\xbc\x01\x1b\x15\xb3\x2a\xe1\x9e\xe6\x3e\x2c\x8a\x28\xab\x05\xf6\xe5\xb1\x28\x7d\x91\xe7\xb3\xaf\x9c\xb0\x4c\xc7\xc0\xbd\x9b\xc2\x38\x59\x47\xb5\x63\x5c\xa0\xfb\xdd\x32\x1d\x0f\xd3\xde\xf7\xfa\xf7\xa7\x28\x03\x9d\x35\x9d\xe2\x59\x55\x8e\xd0\x46\x68\xe6\x63\x2a\x74\xda\x38\xfe\x56\x7f\x5e\x52\xdc\xb5\x88\xb6\x8d\xca\x0a\x68\x81\xad\xa1\x84\x44\xea\xa6\xcc\x8a\x03\xd2\x7b\x32\x4d\x98\xd7\xec\xcc\x25\x45\xce\x4d\x8d\xa2\xce\xc2\xe4\xab\xda\x52\x23\x67\xd1\x33\x39\xec\x26\xbb\xb0\x58\x3d\x45\xb2\x6e\xf5\x60\xc3\x63\xa3\xfb\xf3\x2d\x70\x09\xd0\x36\xea\xd4\x7c\xb5\x98\xba\xdb\xb9\xec\x49\x8c\x04\x2b\xb4\x7b\x37\x7f\x3d\xe0\xfd\x4b\x16\x1d\xf3\x22\xad\x3d\xa3\x00\xf6\x22\x28\xb6\xfb\xa6\x93\xe8\x80\x97\x9e\xec\xf9\x00\x92\x4b\xa2\x8e\x64\x4f\x94\xf2\xa9\xd9\xbb\x50\x5d\xc3\xe6\xb3\xb1\x4d\xe8\x52\x33\x88\xee\x13\xc6\xac\xd5\xd3\x52\xf6\x25\x52\xa7\x85\x36\xb2\x2c\xa2\x4f\x3c\x1f\xb1\xe6\x38\x9c\x7e\xe0\x06\x74\xce\x08\xa6\x4e\x2b\xf9\xdf\x19\x78\xa8\x37\x2d\x7c\x5e\x5a\x46\xb6\x6b\x9d\xcd\x00\xd1\x00\xda\x47\xa2\x2f\xa2\xae\x42\x21\xd1\x82\x1e\xe7\xbe\x00\x99\xf7\x94\xd6\x37\x25\xca\x9d\x2d\x25\xfe\xb6\x06\x1a\x36\x45\xab\xe5\xcf\xc6\xda\xe8\x5f\xa3\x7f\x8d\x80\xb7\x2c\x4c\xd6\x6f\xc7\x3a\xb7\x51\x47\xe2\x93\x93\xd9\x56\x78\x0f\xa2\x8c\x4e\xdc\xa5\xac\x7e\xc9\x2c\xda\x6f\xc3\xfa\x2b\x2e\x9a\xc0\xa0\xd8\xb5\x90\xce\x7d\x81\x19\x5b\x6b\x34\x74\xcc\xf0\x5e\x13\x27\x13\x94\xbf\x31\xba\x77\xb4\x4e\x80\x6a\xd8\x46\x67\xf0\x5e\x24\x0b\x35\x86\x9e\xfa\x16\x66\x71\xb8\x8e\x57\xf2\x2f\x1b\xb5\x89\x11\x58\x98\xe3\xca\xd9\xe7\x85\x04\x01\x4f\x86\xee\xc3\xa2\xb6\xf3\x59\x5c\x45\x89\x1e\x96\x57\x4e\xc1\xc0\x81\x93\x86\xa7\x67\x4b\x18\x2a\xc7\x64\x3b\x4c\x04\x7a\x8f\xa2\xc4\x19\x31\x22\x1a\x9f\x0f\xf5\x56\x41\x08\xab\x2a\x7d\x5a\xa3\x20\x20\xb7\x5b\x96\xa4\x7b\x84\x3c\xb0\x7c\xc6\x9d\xb4\x6d\x06\x3a\xb1\x47\xf5\x81\xf4\xc7\xe9\xfb\x2d\x4c\x81\x44\x12\xba\x98\x7a\x1d\x1c\x30\xe6\x84\x65\x10\x23\x35\x76\xf1\x76\x1b\x2b\x9a\xab\xe1\x0e\x65\xb0\xc6\x39\x92\x13\x95\x53\x36\xdc\xd9\x00\x66\x3a\x74\x9f\xe5\x74\x67\x0a\xaf\xd7\x95\x0a\xa7\x8d\x29\x34\x11\x20\xf7\x32\xce\xe3\x15\x7a\x5d\xe2\x0e\xbf\xbd\x8c\x6f\xf6\x98\x44\x6f\xcf\xf5\xb0\xdf\x7f\xb1\x1c\xa8\x1a\x59\xaf\x55\xd1\x3f\xe6\x7a\xc1\xd4\xd3\xa9\x39\x05\xca\x36\x6f\x6b\x84\x4c\x79\x0c\xa6\x5e\x00\x1c\xe3\xa3\xd2\x57\x19\x8a\xab\xe2\xfb\xc3\x38\x3c\xe0\x06\x53\xcb\x84\x96\x2c\x57\x4f\x61\x92\x44\x5b\x79\x5c\x52\x33\x07\xd1\x0d\x9c\x3e\x36\x90\x3a\xe9\xf9\x47\x60\x32\x32\x0d\x14\x39\x06\xb1\x6f\xf0\x92\xb1\x0c\x23\x83\x38\x16\xc7\x2a\x8e\x71\xbd\x14\xc3\xef\x10\x93\xa7\xd6\x93\xe8\xbb\xe4\x2d\x72\xc4\xab\xff\x46\x67\x15\x98\x5d\x1e\xd5\xee\x6b\x30\x5e\x51\xab\x42\x20\x05\xb4\x28\x8b\xc3\x6d\xfc\xbf\xd1\x7a\x22\x68\x8b\x59\x6f\xee\x3d\x6b\xfc\x6a\xcd\x1e\xf2\x06\xa2\x35\x1e\xf8\x9f\x7a\xa5\xe9\x91\x96\x32\x36\x0d\x0b\xfb\x66\xed\x79\x4a\x5e\xff\x4a\x16\x38\x33\x8a\xff\x51\x03\xca\x63\x16\xfd\xcf\x21\x4a\x56\xb5\x52\xab\xa2\x06\x47\x89\xc5\xd2\x9a\x43\xe9\x9a\xbb\xee\x4b\xc3\x39\x51\xfc\x90\xdd\x59\xf4\x83\x76\x67\x79\x03\xc8\xd6\x74\x3e\x65\x91\xdd\xab\x7e\x1c\xa9\x3e\x04\x95\x53\xba\xe4\xae\xaf\x55\xb7\x03\x00\x93\x17\xed\xae\x5e\xaf\xc6\xbe\xc2\xae\x60\x3f\xc1\xde\xe6\xe8\x3e\xcf\xc8\x6e\x99\x92\x71\x84\xb8\x9a\xb0\xcb\x92\x90\x6a\x65\x75\x6f\x3c\xcf\x42\x78\xd5\x4e\x74\xd0\x3c\x1f\xa2\x86\x39\x9b\x0d\x3e\x5b\x59\x41\xd9\xc2\xff\x16\xb7\x91\x2c\x5d\xd5\x25\xf2\xd8\x02\x97\xb2\x94\x9c\x72\x19\x40\xd3\xa5\xe4\x68\x25\xfa\x73\x1f\x67\x8d\xe2\xd1\xa4\x20\xf1\xbd\xf6\xec\xbb\x8f\xb5\x91\x7b\xaf\x5d\xa4\x4b\xc7\xda\xe8\x06\x63\xb7\x7d\x24\x71\xd6\x15\x94\xac\x63\x28\xb0\x65\x6c\xae\x8d\xee\xef\x65\x01\xb3\xa9\x1f\x50\xd5\x04\xc6\x1c\xcb\xbd\xcc\xce\xbb\xce\x81\x5d\xad\xe4\xbc\xc5\xfe\xed\xbf\xa4\x70\x1d\xd5\x84\x41\x9c\xda\x57\x84\xd8\x20\xce\x63\x74\xbb\x63\xa0\xc4\x5a\x04\xbe\x41\xee\x80\x47\x07\xf3\xf0\x5b\x34\x81\x3a\xdf\x0e\xa9\x82\x94\xf1\x29\x58\x91\xaa\x32\x4d\xc7\x57\x35\xd5\x56\xa6\xfb\x53\x81\xf9\x61\x9d\x3f\xd3\xbb\xce\xe9\xc3\x7c\xd8\xd9\xd7\x85\x9e\x4c\xc6\x5a\xe8\x16\x13\x60\xe8\xd5\x67\x33\x3f\x17\x76\xa7\x7b\x54\x7f\x59\xfc\x3c\x8b\xdc\x59\x04\x98\x88\x19\x6a\xcd\x5e\x78\xf3\x56\x3b\x77\x18\x13\x6d\x3c\x78\x6f\x71\xcf\xd9\xf8\x7e\x14\x2f\xe9\x6d\x4a\xc5\x59\x05\xea\x6c\xf2\xcf\xe5\x47\x64\xf4\x10\x88\x00\x62\x99\xb6\x59\x77\x4c\xff\xe4\xa1\x8e\x35\xbe\x53\x69\x63\x4d\x7e\xa5\xee\xfc\x70\x9a\x10\xa1\xe4\x75\xea\x30\xfd\xf8\xfe\xa7\xaa\x9f\x6d\xe8\xac\x78\x8f\x36\x1f\x34\x96\xbb\x40\xf2\x18\xd7\x34\xdd\x9d\x57\x53\xc8\xd4\xd8\x1d\xd4\x4f\xd9\xc9\xab\x8e\x8f\x76\x7a\x14\x39\xc6\x30\x9c\xcc\x1e\x70\xef\x7f\x92\x40\xf7\x9e\xb5\x4f\x91\x35\x07\x0e\x25\x0b\xb7\x9b\x34\x8b\x8b\xa7\xb7\x1a\x82\x4b\x7b\x58\xba\x27\xe4\xb3\x6d\x37\xe9\x24\xdf\x47\xab\xf8\x31\x5e\x4d\x40\x1e\x5c\x6b\x4a\x0d\x65\x20\x52\xcb\xa6\x43\xce\xee\x4a\x99\xb4\x0b\x9c\xf3\x61\x70\x83\xcd\x9e\x54\x60\x7e\xd8\xec\xc9\x1d\x72\xa1\x17\xa4\x56\xa5\xb3\xda\x9a\x33\x20\x33\x59\xbd\xb0\xf6\xea\x43\x70\x32\x7f\xe9\x30\xee\x55\x76\x8f\x95\x7b\x08\x0d\xb2\x68\xbf\x8d\x57\x15\xf3\x63\x91\xcb\x35\x98\xde\xa2\x92\x8b\x4d\xaa\xde\xba\xe6\x15\x24\xd0\x15\x35\x35\x49\x94\xda\xa1\xf4\xbb\xfb\x4b\x57\x79\x7d\x80\x0b\x90\xd6\x3d\xe9\x10\xf3\xa0\xae\x25\x3d\x70\x2c\xf3\x6c\x3c\xdd\x50\xc5\x30\x70\xee\x90\xaf\x33\xda\x5f\xee\x10\xb4\xea\x9a\x1c\x76\x27\xf5\x22\xb3\x08\x28\x3e\x83\x83\x8b\x16\x47\x4a\x0c\x9d\x63\x5f\x06\xd0\xc4\x37\xa8\xe6\x84\x55\xba\xdb\x87\x59\x9c\xc3\xa0\x99\xfb\x25\x34\x96\xb4\xfb\xf8\x4a\x2d\x54\x7f\x60\xa7\x71\x9e\x4b\xdb\x7b\xf8\xce\x9c\x10\xc6\x18\xe8\x26\x30\xaa\xb1\xe1\xb2\x92\x34\xab\x34\x13\xba\x5e\x5d\x81\x0f\xff\x65\x30\xdd\x9d\x5f\x14\x9e\x1a\xe6\xe7\xc9\x2e\xae\xdd\x27\xe2\xd7\x81\xee\xc2\xda\xc6\x33\xe0\xa8\xf1\x2f\xd7\x3b\x2d\x5e\x4e\x92\x44\x9c\x5e\xe0\x02\x7f\x72\xd8\x7d\x8d\x7e\xc8\xb4\xcc\x72\xec\x60\xcd\x57\xce\x72\xae\x77\xd8\x9c\x2f\xfc\xba\xc9\x72\xdf\xa3\x78\xf3\x24\x98\x83\x03\xcd\xf2\x61\x03\x8a\xe6\x73\x8a\xe7\xe7\x03\xdd\x2e\x41\x0d\x37\x9b\x2c\xda\x84\x05\xc8\x62\x78\x81\x5d\x2a\x4d\xdb\x74\xaa\xff\x21\x69\x26\xf5\x7b\x5c\x3c\x55\xba\xbb\x56\x36\x58\xd7\xca\x7a\x3a\xa1\xd8\x93\x9a\xe7\xfc\x32\xbc\x1e\x91\xcf\x0d\xf4\xfa\xf8\x43\x6d\x20\x3e\x81\xb5\xf0\xfd\xd0\x4d\x3e\xe0\x48\x7a\xbd\xc9\x87\x9a\x30\x97\xb8\x25\xed\x7b\x0f\x6a\x3a\x2e\xdc\x54\x78\x9b\xbd\xdf\x82\xd4\x3d\xde\x83\x68\x4a\xed\x79\x4e\xf1\x75\x9a\xe0\x8a\x73\xd3\xa5\xd5\x7f\x6b\x79\x7f\x3a\x8d\x6d\xb3\x7a\xed\x34\xe1\x64\x24\xbe\x1d\x10\x2f\x25\x90\x5f\xaa\x60\x5c\x19\x2f\x8f\x8c\xac\xf6\x7b\xef\xac\xec\x2d\xbb\x30\x34\x85\xfa\xab\x88\x96\xa2\x1a\x86\x80\x14\x28\x49\x9b\x7c\xc4\xa6\x99\x12\xe9\x01\x69\xfd\x81\x47\x25\xaf\xc4\x1a\xc2\x2e\xb8\x86\x6b\x35\xce\x48\xf6\xc1\x8d\x11\x2f\xb9\x6e\x3f\x43\xa1\xe1\x59\x6e\x31\xe6\x0d\x45\xd6\x65\xfa\x4a\x52\x37\xce\xa7\xe3\x05\x96\xae\xde\xad\x8e\x1a\xdf\x6b\x18\x1b\x46\x09\x6a\x2d\x1a\x46\x3f\x8b\x09\xaf\x8f\x3f\x54\x31\x61\x68\x0a\x94\x4f\xd2\xed\x2b\xda\xc5\x32\x63\xa8\xe1\xf5\x5a\x7f\x2a\x8e\xd7\xc7\x1f\x4a\x71\x70\x09\xac\xa7\x23\xa0\x41\x5a\x1d\xb2\x3c\xad\xdd\x5b\xfc\x62\x75\x71\x35\xf1\x79\x8b\xe5\xe5\xe7\xba\x3e\x0f\xda\x74\x6d\xb3\xcc\x9a\x18\x1b\x92\x8b\x1e\xec\x4b\x40\xaa\x8f\x8a\x68\xb7\x96\xc2\x02\x97\x16\x89\x05\xc9\x4f\xb9\x93\x21\x77\x5c\x0c\x5f\x7c\x32\xfc\xed\xf7\x7e\x6d\x86\x7f\xf9\x64\xf8\xdb\xef\xfd\xda\x0c\xbf\x37\x9d\x99\xd8\x39\xd9\x0b\x4c\x1c\x2f\xb0\xcf\xe7\x7f\x68\xef\x44\x62\xac\x8d\x36\x59\x7a\xd8\x57\xff\xd8\x20\x1f\x75\xed\xdd\x6d\x66\x26\x50\x12\xb8\x4d\xb0\x71\x3b\xb1\xad\xce\xff\x53\x8c\xec\x3e\x80\x78\xf9\xca\x53\xb4\xad\x4d\xb8\x36\x79\x9e\xd5\xad\xd6\x52\x85\x6d\x00\x87\x53\x4c\x43\x5e\x59\xe9\x31\x8e\xb6\x6b\xe6\x25\x88\xa7\xf7\xaa\x39\xbf\x70\x3f\x8c\x4b\xdd\xb3\xb0\x88\x36\xa0\x7b\x8a\x6d\x74\x6f\x61\x47\xe8\xcc\xfc\x7e\x9f\xa5\xb5\xe9\xec\xa6\x6f\xfd\x9f\xac\x1d\xc5\xa7\xa6\x45\x59\x69\x60\xe5\x87\x3e\xdb\xef\x0e\x99\xb2\x3b\xfc\xf2\x16\x60\x8e\xb0\x84\x91\x5e\x83\x75\x16\x86\x52\x92\x94\x41\x64\xc9\x02\x30\x58\x9e\x0d\x65\xbc\xc7\x3d\xc5\x82\x63\xef\x07\x99\x8d\x99\x5a\x44\xbf\xa9\x81\x44\xe8\x8e\x44\x39\x96\x28\x2f\xb2\x28\xdc\x81\x52\xff\x47\xcf\x54\x68\x5c\x8d\xd2\xcc\xef\xcb\x57\xea\xe7\x4c\xa8\x30\x42\x55\x94\x00\x96\x4b\x8a\xeb\xd3\xbe\xef\xc2\x9f\xb1\x36\x8a\xd7\x93\x34\x9b\xfc\x07\x5f\x24\xa4\x20\x26\xf2\xb0\x6f\x1a\x57\x04\xaf\x81\x3d\x9f\x92\xba\x21\x81\x3d\x07\x98\x47\xee\x3f\x47\xc1\x02\x54\x5d\xa5\x49\x7e\xd8\x45\x19\x3f\xcc\x4a\x48\x6b\x0d\x13\x74\x7e\x73\xd2\x6a\xef\x5e\xfe\xf8\x12\xf3\x0a\xe5\x73\x74\xf9\x83\xbb\x21\x7a\x0a\x57\x67\xd6\x92\x34\x5c\x7d\x85\x18\x35\x87\x20\xfd\xe6\xd3\xb8\xd6\x7f\xa5\xdb\x08\x0f\xe9\xbd\x37\x29\x1d\xb7\xb2\xb4\x68\xa1\x5b\xfa\xe9\x16\xea\x3f\xbd\x23\x99\x82\x9c\x2a\x55\xac\x21\x71\x12\xaf\xb7\xd1\xa4\x88\xeb\x8d\x52\x7f\xac\x66\x6b\x5f\xd3\xb0\xea\x9c\xc8\x7a\xf5\x23\xbf\xd0\x5c\x7f\x31\xe9\x2e\x9f\x1c\x92\xf8\xcf\x46\x02\x4b\x87\x87\x62\x9f\x2e\x7b\x36\x91\xaf\xb9\xde\xf4\xfd\x84\xf0\x17\x6d\x3f\x23\x54\xde\x6d\xb5\xff\x7d\xc8\x8b\x77\x21\xd0\xcb\xa7\xfe\x1e\x78\xfe\x3b\xc1\x6c\xe9\x4a\xb9\xd8\x31\x4c\x07\x38\xca\x7e\xb0\x7a\xe6\x98\xd7\x19\x6b\x55\xb6\x88\xd5\xb1\xfb\xce\x8f\x93\x36\xc4\x5b\x58\xef\x49\xe4\xac\x85\x7c\xec\xe8\x4b\xcd\x20\xba\x4f\x68\xf3\x18\xb7\xe7\xb5\x73\x8a\x5c\xe0\x9c\xb3\xe8\x1b\xc7\xf0\x5a\x20\x0a\x0b\xd3\xf3\x09\x05\x4e\xfe\x51\x09\x58\xf9\x7f\x8f\x71\xbf\xfc\xf3\x5a\x8a\xc1\x17\xe7\x71\xa1\xd0\x24\x3a\x12\xdd\x92\x17\x9e\x60\xcb\x3d\x21\xfe\x5b\xf9\x9b\xbf\x7e\xfb\xff\x00\x00\x00\xff\xff\xcb\x84\x5b\x0b\xc4\x06\x01\x00")

func resourcesRedisCommandsGolangJsonBytes() ([]byte, error) {
	return bindataRead(
		_resourcesRedisCommandsGolangJson,
		"resources/redis-commands-golang.json",
	)
}

func resourcesRedisCommandsGolangJson() (*asset, error) {
	bytes, err := resourcesRedisCommandsGolangJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources/redis-commands-golang.json", size: 67268, mode: os.FileMode(420), modTime: time.Unix(1604488919, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"resources/redis-commands-golang.json": resourcesRedisCommandsGolangJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("nonexistent") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"resources": &bintree{nil, map[string]*bintree{
		"redis-commands-golang.json": &bintree{resourcesRedisCommandsGolangJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
